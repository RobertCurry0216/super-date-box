--
--  Luacheck.lua - include file auto-generated by toybox.py (https://toyboxpy.io).
--

local toyboxes = {}
toyboxes.read_globals = {}

local function mergeTables(t1, t2)
    for k, v in pairs(t2) do
        if type(v) == 'table' then
            t1[k] = mergeTables(t1[k] or { }, t2[k])
        else
            assert(t1[k] == nil, "Found duplicate entries for '"..k.."' while merging luacheck files.")

            t1[k] = v
        end
    end

    return t1
end

local function luacheckMerge(other)
    if other.globals ~= nil then
        mergeTables(toyboxes.read_globals, other.globals)
    end

    if other.read_globals ~= nil then
        mergeTables(toyboxes.read_globals, other.read_globals)
    end
end

-- Add globals from the toyboxes as read-only globals.
luacheckMerge(require "toyboxes/github-dot-com/NicMagnier/PlaydateLDtkImporter/luacheck/Luacheck")
luacheckMerge(require "toyboxes/github-dot-com/DidierMalenfant/Signal/luacheck/Luacheck")

return function(stds, files)
    stds.toyboxes = toyboxes

    -- Also add globals for files from the toyboxes themselves as the project intended.
    stds.toybox_1 = require "toyboxes/github-dot-com/NicMagnier/PlaydateLDtkImporter/luacheck/Luacheck"
    files["toyboxes/github-dot-com/NicMagnier/PlaydateLDtkImporter"].std="+toybox_1"

    stds.toybox_2 = require "toyboxes/github-dot-com/DidierMalenfant/Signal/luacheck/Luacheck"
    files["toyboxes/github-dot-com/DidierMalenfant/Signal"].std="+toybox_2"
end
